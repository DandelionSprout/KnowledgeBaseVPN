"use strict";(self.webpackChunkadguard_vpn_knowledge_base=self.webpackChunkadguard_vpn_knowledge_base||[]).push([[296],{4137:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,y=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return n?r.createElement(y,i(i({ref:t},p),{},{components:n})):r.createElement(y,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9687:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var r=n(3117),a=n(102),o=(n(7294),n(4137)),i=["components"],c={title:"AdGuard VPN \u4f7f\u7528\u751a\u9ebc\u985e\u578b\u7684\u52a0\u5bc6\uff1f",sidebar_position:7},l=void 0,s={unversionedId:"general/adguard-vpn-encryption",id:"general/adguard-vpn-encryption",title:"AdGuard VPN \u4f7f\u7528\u751a\u9ebc\u985e\u578b\u7684\u52a0\u5bc6\uff1f",description:"\u5f15\u8a00",source:"@site/i18n/zh-TW/docusaurus-plugin-content-docs/current/general/adguard-vpn-encryption.md",sourceDirName:"general",slug:"/general/adguard-vpn-encryption",permalink:"/KnowledgeBaseVPN/zh-TW/general/adguard-vpn-encryption",draft:!1,editUrl:"https://github.com/AdguardTeam/KnowledgeBaseVPN/edit/master/docs/general/adguard-vpn-encryption.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"AdGuard VPN \u4f7f\u7528\u751a\u9ebc\u985e\u578b\u7684\u52a0\u5bc6\uff1f",sidebar_position:7},sidebar:"sidebar",previous:{title:"How to subscribe",permalink:"/KnowledgeBaseVPN/zh-TW/general/subscription"},next:{title:"What is a DNS leak?",permalink:"/KnowledgeBaseVPN/zh-TW/general/dns-leaks"}},p={},u=[{value:"\u5f15\u8a00",id:"\u5f15\u8a00",level:2},{value:"AES\u7684\u6b77\u53f2",id:"aes\u7684\u6b77\u53f2",level:2},{value:"AES-256 \u7684\u5de5\u4f5c\u539f\u7406",id:"aes-256-\u7684\u5de5\u4f5c\u539f\u7406",level:2}],d={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u5f15\u8a00"},"\u5f15\u8a00"),(0,o.kt)("p",null,"\u52a0\u5bc6\u662f\u4ee4\u300c\u865b\u64ec\u79c1\u4eba\u7db2\u8def\u300d\u8b8a\u5f97\u300c\u79c1\u4eba\u300d\u7684\u539f\u56e0\u3002 VPN \u5728\u60a8\u7684\u88dd\u7f6e\u548c VPN \u4f3a\u670d\u5668\u4e4b\u9593\u8a2d\u7f6e\u4e00\u689d\u96a7\u9053\uff0c\u96a7\u9053\u6703\u52a0\u5bc6\u60a8\u7684\u6578\u64da\uff0c\u4ee4\u5b83\u5b89\u5168\u9032\u5165\u516c\u958b\u7684\u4e92\u806f\u7db2\u3002 \u52a0\u5bc6\u904e\u7a0b\uff0c\u5373\u5c07\u6578\u64da\u8b8a\u6210\u4efb\u4f55\u4eba\u90fd\u7121\u6cd5\u8b80\u53d6\u7684\u4e82\u78bc\uff0c\u5c0d\u65bc\u4efb\u4f55 VPN\u670d\u52d9\u90fd\u5fc5\u4e0d\u53ef\u5c11\u3002"),(0,o.kt)("p",null,"AdGuard VPN \u5354\u5b9a\u4f7f\u7528\u8fc4\u4eca\u70ba\u6b62\u6700\u5b89\u5168\u3001\u5feb\u901f\u7684\u5bc6\u78bc\u6f14\u7b97\u6cd5 \u2013 AES-256\u3002 \u4e86\u89e3\u5b83\u662f\u751a\u9ebc\u4ee5\u53ca\u5b83\u70ba\u4f55\u5982\u6b64\u51fa\u8272\u3002"),(0,o.kt)("h2",{id:"aes\u7684\u6b77\u53f2"},"AES\u7684\u6b77\u53f2"),(0,o.kt)("p",null,"AES (\u9032\u968e\u52a0\u5bc6\u6a19\u6e96) \u52a0\u5bc6\u572820\u4e16\u7d00\u672b\u671f\u65bc\u7f8e\u570b\u88ab\u958b\u767c\u3002 \u7531\u65bc\u7576\u6642\u7684\u6578\u64da\u52a0\u5bc6\u6a19\u6e96 (DES) \u5df2\u904e\u6642\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u7a2e\u65b0\u7684\u3001\u66f4\u5b89\u5168\u7684\u5bc6\u78bc\u6f14\u7b97\u6cd5\u3002"),(0,o.kt)("p",null,"\u5728\u653f\u5e9c\u7684\u516c\u958b\u7af6\u8cfd\u4e2d\u52dd\u51fa\u7684 Rijndael\u52a0\u5bc6\u6cd5\u2014\u2014\u8207 DES \u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u66f4\u8907\u96dc\u3002 2002\u5e74\u66f4\u540d\u70baAES\uff0c\u4e26\u7531\u7f8e\u570b \u570b\u5bb6\u6a19\u6e96\u6280\u8853\u7814\u7a76\u6240\u767c\u5e03\u3002"),(0,o.kt)("p",null,"\u5982\u4eca\uff0cAES \u5df2\u7d93\u6210\u70ba\u52a0\u5bc6\u7684\u696d\u754c\u6a19\u6e96\u3002 \u7531\u65bc\u5176\u958b\u653e\u6027\uff0c\u5b83\u88ab\u7f8e\u570b\u570b\u5bb6\u5b89\u5168\u5c40\u548c\u653f\u5e9c\u6a5f\u69cb\u4ee5\u53ca\u79c1\u71df\u3001\u5546\u696d\u548c\u975e\u725f\u5229\u7d44\u7e54\u63a1\u7528\u3002"),(0,o.kt)("h2",{id:"aes-256-\u7684\u5de5\u4f5c\u539f\u7406"},"AES-256 \u7684\u5de5\u4f5c\u539f\u7406"),(0,o.kt)("p",null,"AES is a block cipher with a symmetric key. As a symmetric-key cipher, it requires only one secret key to encrypt and decrypt the data. As a block cipher, AES divides the unencrypted information, which is called plaintext, into blocks, splits the original cryptographic key into several ones and applies them to each block. In the end, a ciphertext, i.e. an encrypted text, is obtained."),(0,o.kt)("p",null,"There are different key sizes \u2014 128, 192 and 256 bits \u2014 and the blocks are also measured in bits. During the encryption process, the encryptor replaces each piece of information with another, depending on the security key. So, for example, AES-256 creates 256 blocks of ciphertext from 256 blocks of plaintext in 14 rounds."),(0,o.kt)("p",null,"The rounds consist of several steps: splitting the data into blocks, swapping bytes, shifting rows and rearranging columns. The result is a completely random set of characters, which will only make sense with an encryption key."),(0,o.kt)("p",null,"AES-256 is the strongest level of encryption: to break this cipher, a bad actor will have to try 2256 discrete combinations, each consisting of 78 digits."))}f.isMDXComponent=!0}}]);